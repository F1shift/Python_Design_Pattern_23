重複のインスタンスを作成することを回避することで、作成されたインスタンス数を減らし
メモリの消費量を抑えるのがflyweightパターンです。

よくある実装手段の一つは、DictやListを作成し、
インスタンスを作成するたびにその中に入れます。
そして__new__の中でインスタンスを作成する前に、
DictやListをチェックし、流用できるインスタンスがあれば、
新しく作成せず、既存のインスタンスを返します。
そうすることで、重複したインスタンスを作成することが回避でき、
メモリの消費量を抑えられます。