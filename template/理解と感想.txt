【長所】：
抽象クレスでテンプレートを作成することで、新製品のPizzaを追加しても、
使用者九にすることなく、PizzaStoreで同じように扱いで使用できることが素晴らしいと思います。

【短所】：
１．Pythonではインタフェースがなく、代わりに抽象クレスで実現するしかありません。
   でも複数のクラスを同時に継承できるので、たいした問題ではないと思います。
２．Pythonでは書き方によって変数の型を指定できるが、強制力がないため、
   定義したインタフェースと違うクラス入れても、実行できてしまいます。
   それがあまり望ましくないと思います。
   厳密に型定義している言語なら、コンパイル段階で間違いを提示してくれるので、
   問題のあるコードを早期的に発見できます。
３．Templateの抽象メソッドをサブクラスで実現するため、
   新しい製品を追加するたびに、抽象メソッドを全部実装しなければならないことになります。
   抽象メソッドに共通機能がある場合、外部クラスに持たせるFactoryモードの方が適していると思います。
４．PythonのIDEに型チェックをしてもらうために、typingモジュールの使い方も学習した方がいいと思いました。
