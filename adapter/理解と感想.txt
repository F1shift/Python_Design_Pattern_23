Adapterパターンの目的は、元のクラスを修正することなく、
特定インタフェースを実装しているクラスを別のインターフェースとして使うことです。

その目的を達成するためにAdapterを作るのがAdapterパターンと言います。
Adapterを実装するには二種類の手法があります。

【継承（inheritance）による手法】
    Adapterクラスが変換元クラスを継承し、更に変換先インタフェースを実装し、
    変換元クラスのサブクラスを作成する。
    新しく実装したメソッドの中で、スーパークラスの方法を呼び出して使用する。

【委譲（invoke）による手法】
    Adapterクラスに変換元クラスのインスタンスを持たせ、変換先インタフェースを実装する。
    新しく実装したメソッドの中で、変換元クラスのインスタンスの方法を呼び出して使用する。